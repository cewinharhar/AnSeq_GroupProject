tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = TRUE)
knitr::opts_chunk$set(message = FALSE)
#needed libraries
library(Mcomp)
install.packages("mcomp")
install.packages("Mcomp")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = TRUE)
knitr::opts_chunk$set(message = FALSE)
#needed libraries
library(Mcomp)
library(ggplot2)
library(gridExtra)
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = TRUE)
knitr::opts_chunk$set(message = FALSE)
#needed libraries
library(Mcomp)
library(ggplot2)
library(gridExtra)
subset(M3, "monthly")["N1483"] %>% str()
data <- subset(M3, "monthly")["N1483"]
autoplot(data$N1483)
#use variable for future tasks
df.Train <- data$N1483$x
df.Test <- data$N1483$xx
df.Test_sub <- window(data$N1483$xx , end=1995)
autoplot(df.Test_sub)
ggsubseriesplot(df.Train) +
ggtitle("Seasonal plot: Monthly shipments")
ggseasonplot(df.Train, year.labels=TRUE, year.labels.left=TRUE) +
ggtitle("Seasonal plot: Monthly shipments")
ggAcf(df.Train)
gglagplot(df.Train)
naive_shipment <- naive(df.Train, h=18)
autoplot(naive_shipment)
snaive_shipment <- snaive(df.Train, h=18)
autoplot(snaive_shipment)
rwf_shipment <- rwf(df.Train, drift = TRUE, h=18)
autoplot(rwf_shipment)
autoplot(rwf_shipment)+autolayer(fitted(rwf_shipment), series = "fitted")
summary(rwf_shipment)
checkresiduals(naive_shipment)
checkresiduals(snaive_shipment)
checkresiduals(rwf_shipment)
accuracy(naive_shipment, df.Test)
accuracy(snaive_shipment, df.Test)
accuracy(rwf_shipment, df.Test)
#test mit kurzer prediction
#accuracy(naive_shipment, df.Test_sub)
#accuracy(snaive_shipment, df.Test_sub)
#accuracy(rwf_shipment, df.Test_sub)
df.hwAdd <- hw(df.Train, seasonal = "additive", h = length(df.Test))
df.hwAddDamped <- hw(df.Train, seasonal = "additive", damped = TRUE, h = length(df.Test))
df.hwMulti <- hw(df.Train, seasonal = "multiplicative", h = length(df.Test))
df.hwMultiDamped <- hw(df.Train, seasonal = "multiplicative", damped = TRUE, h = length(df.Test))
#plot
df.hwAddPlot <- autoplot(df.hwAdd, color="AdditiveMethod") +
labs(x="Time", y="Shipments", color = "Legend") +
autolayer(df.Test)
df.hwAddDampedPlot <- autoplot(df.hwAddDamped, color="AdditiveMethod") +
labs(x="Time", y="Shipments", color = "Legend") +
autolayer(df.Test)
df.hwMultiPlot <- autoplot(df.hwMulti, color="MultiMethod") +
labs(x="Time", y="Shipments", color = "Legend") +
autolayer(df.Test)
df.hwMultiDampedPlot <- autoplot(df.hwMultiDamped, color="MultiMethod") +
labs(x="Time", y="Shipments", color = "Legend") +
autolayer(df.Test)
grid.arrange(df.hwAddPlot, df.hwAddDampedPlot,  df.hwMultiPlot, df.hwMultiDampedPlot, nrow=4)
checkresiduals(df.hwMultiDamped)
accDf <- rbind(
accuracy(df.hwAdd$fitted, df.Train),
accuracy(df.hwAddDamped$fitted, df.Train),
accuracy(df.hwMulti$fitted, df.Train),
accuracy(df.hwMultiDamped$fitted, df.Train)
)
rownames(accDf) <- c("hw Additive", "hw damped Additive", "hw Multiplicative", "hw damped Multiplicative")
print(accDf)
accDf <- rbind(
accuracy(df.hwAdd$mean, df.Test),
accuracy(df.hwAddDamped$mean, df.Test),
accuracy(df.hwMulti$mean, df.Test),
accuracy(df.hwMultiDamped$mean, df.Test)
)
rownames(accDf) <- c("hw Additive", "hw damped Additive", "hw Multiplicative", "hw damped Multiplicative")
print(accDf)
summary(df.hwMultiDamped$model)
original <- ts(c(df.Train,df.Test), start=start(df.Train), frequency=frequency(df.Train))
autoplot(original, series = "original") +
autolayer(df.hwMultiDamped$fitted, series = "fitted") +
autolayer(df.hwMultiDamped$mean, series = "predicted") + ggtitle("Damped Multiplicative")
accDf <- rbind(
accuracy(df.lin$mean, df.Test),  #da chunt dis beste model ine
accuracy(df.hwAddDamped$mean, df.Test)
)
#the result of ets gave an additive error, damped additive trend and no season holts approach (holt)
holtError <- tsCV(original, holt, drift = TRUE, h=1, damped = TRUE)
#results of auto.arima gave ARIMA(0,1,1) with constant
arimaFun <- function(x, h){forecast(Arima(x, order=c(0,1,1)), h=h, include.constant = TRUE)} #helper function
arimaError <- tsCV(original, arimaFun, h=1)
print("Holt CV RMSE")
print(sqrt(mean(holtError^2, na.rm = TRUE)))
print("Arima CV RMSE")
print(sqrt(mean(arimaError^2, na.rm = TRUE)))
df.etsFor <- df.ets %>% forecast(h=18)
df.ets <- ets(df.Train)
summary(df.ets)
autoplot(df.ets)
checkresiduals(df.ets)
df.autoarima <- auto.arima(df.Train)
summary(df.autoarima)
checkresiduals(df.autoarima)
load("C:/Users/thiss/OneDrive - Hochschule Luzern/Sequenstial Data Analysis/Assignment/AnSeq_GroupProject/.RData")
load("C:/Users/thiss/OneDrive - Hochschule Luzern/Sequenstial Data Analysis/Assignment/AnSeq_GroupProject/.RData")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = TRUE)
knitr::opts_chunk$set(message = FALSE)
#needed libraries
library(Mcomp)
library(ggplot2)
library(gridExtra)
accDf <- rbind(
accuracy(naive_shipment$mean, df.Test),  #da chunt dis beste model ine
accuracy(df.hwAddDamped$mean, df.Test)
)
rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
print(accDf)
accDf <- rbind(
accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
accuracy(df.hwAddDamped, df.Test)
)
rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
#accDf <- rbind(
#  accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
#  accuracy(df.hwAddDamped, df.Test)
#)
#rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
#print(accDf)
accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
#accDf <- rbind(
#  accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
#  accuracy(df.hwAddDamped, df.Test)
#)
#rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
#print(accDf)
accuracy(naive_shipment, df.Test)  #da chunt dis beste model ine
accuracy(df.hwAddDamped, df.Test)
accDf <- rbind(
accuracy(df.hwAdd$mean, df.Test),
accuracy(df.hwAddDamped$mean, df.Test),
accuracy(df.hwMulti$mean, df.Test),
accuracy(df.hwMultiDamped$mean, df.Test)
)
rownames(accDf) <- c("hw Additive", "hw damped Additive", "hw Multiplicative", "hw damped Multiplicative")
print(accDf)
#accDf <- rbind(
#  accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
#  accuracy(df.hwAddDamped, df.Test)
#)
#rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
#print(accDf)
accuracy(naive_shipment, df.Test)  #da chunt dis beste model ine
accuracy(df.hwMultiDamped, df.Test)
#accDf <- rbind(
#  accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
#  accuracy(df.hwAddDamped, df.Test)
#)
#rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
#print(accDf)
accuracy(naive_shipment, df.Test)  #da chunt dis beste model ine
accuracy(df.hwAddDamped, df.Test)
original <- ts(c(df.Train,df.Test), start=start(df.Train), frequency=frequency(df.Train))
autoplot(original, series = "original") +
autolayer(df.hwMultiDamped$fitted, series = "fitted") +
autolayer(df.hwMultiDamped$mean, series = "predicted") + ggtitle("Damped Multiplicative")
#accDf <- rbind(
#  accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
#  accuracy(df.hwAddDamped, df.Test)
#)
#rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
#print(accDf)
accuracy(rwf_shipment, df.Test)  #da chunt dis beste model ine
accuracy(df.hwAddDamped, df.Test)
#accDf <- rbind(
#  accuracy(naive_shipment, df.Test),  #da chunt dis beste model ine
#  accuracy(df.hwAddDamped, df.Test)
#)
#rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
#print(accDf)
accuracy(rwf_shipment, df.Test)  #da chunt dis beste model ine
accuracy(df.hwMultiDamped, df.Test)
df.ets <- ets(df.Train)
summary(df.ets)
autoplot(df.ets)
checkresiduals(df.ets)
accDf <- rbind(
accuracy(naive_shipment$mean, df.Test),  #da chunt dis beste model ine
accuracy(df.hwAddDamped$mean, df.Test)
)
rownames(accDf) <- c("Naive Model", "hw damped Multiplicative")
print(accDf)
#accuracy(naive_shipment, df.Test)  #da chunt dis beste model ine
#accuracy(df.hwMultiDamped, df.Test)
naive_shipment <- naive(df.Train, h=length(df.Test))
autoplot(naive_shipment)
snaive_shipment <- snaive(df.Train, h=length(df.Test))
autoplot(snaive_shipment)
rwf_shipment <- rwf(df.Train, drift = TRUE, h=length(df.Test))
autoplot(rwf_shipment)
autoplot(naive_shipment)+autolayer(fitted(naive_shipment), series = "fitted")
summary(snaive_shipment)
checkresiduals(naive_shipment)
checkresiduals(snaive_shipment)
checkresiduals(rwf_shipment)
